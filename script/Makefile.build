obj-y  :=
target := built-in.o

include Makefile

objs    := $(filter-out %/, $(obj-y))
subdirs := $(foreach v, $(filter %/, $(obj-y)), $(patsubst %/, %, $(v)))
subobjs := $(foreach v, $(subdirs), $(v)/built-in.o)
depfile := $(foreach v, $(objs), .$(v).d)
depfile := $(wildcard $(depfile))

__build : $(target)

PHONY += $(target)
$(target) : $(subobjs) $(objs)
	@ rm -rf built-in.o
	$(Q) $(LD) -r -o built-in.o $^

$(subobjs) : $(subdirs)
PHONY += $(subdirs)
$(subdirs) :
	$(Q) $(MAKE) $(build) $@

define cmd_cc_o_c = 
	$(CC) $(CFLAGS) -Wp,-MD,.$(1).d -o $(1) $(2)
endef

define quiet_cmd_cc_o_c = 
	@echo "cc $(2) -o $(1)"
	@$(CC) $(CFLAGS) -Wp,-MD,.$(1).d -o $(1) $(2)
endef

ifneq ($(depfile), )
  include $(depfile)
endif

%.o : %.c
	$(call $(quiet)cmd_cc_o_c,$@,$<)

%.o : %.S
	$(call $(quiet)cmd_cc_o_c,$@,$<)

.PHONY : $(PHONY)

